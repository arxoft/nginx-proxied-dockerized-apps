#!/bin/bash

APP_NAME=$1

if [ -z "$APP_NAME" ]; then
  echo "Usage: $0 <app-name>"
  exit 1
fi

APP_DIR="./$APP_NAME"

# Check directory
if [ ! -d "$APP_DIR" ]; then
  echo "Error: Directory $APP_DIR does not exist."
  exit 1
fi

# Check docker-compose.yml
if [ ! -f "$APP_DIR/docker-compose.yml" ]; then
  echo "Error: $APP_DIR/docker-compose.yml not found."
  exit 1
fi

# Check docker-compose.prod.yml
if [ ! -f "$APP_DIR/docker-compose.prod.yml" ]; then
  echo "Error: $APP_DIR/docker-compose.prod.yml not found."
  exit 1
fi

# Ask if rebuild is needed
echo "Do you want to rebuild the containers? (y/N): "
read -r REBUILD_RESPONSE

REBUILD_FLAG=""
if [[ "$REBUILD_RESPONSE" =~ ^[Yy]$ ]]; then
  REBUILD_FLAG="--build"
  echo "Will rebuild containers..."
else
  echo "Using existing images..."
fi

# Stop and remove existing containers for this app
echo "Stopping container named: $APP_NAME..."
CONTAINERS=$(docker ps -aq --filter "name=${APP_NAME}")
if [ -n "$CONTAINERS" ]; then
  docker stop $CONTAINERS >/dev/null
  docker rm $CONTAINERS >/dev/null
fi

# Build compose command
COMPOSE_CMD="docker-compose -f $APP_DIR/docker-compose.yml -f $APP_DIR/docker-compose.prod.yml"

# Run the app
if [ -n "$REBUILD_FLAG" ]; then
  echo "Starting $APP_NAME with rebuild: $COMPOSE_CMD up -d --build"
  $COMPOSE_CMD up -d --build
else
  echo "Starting $APP_NAME: $COMPOSE_CMD up -d"
  $COMPOSE_CMD up -d
fi

